plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'io.freefair.lombok' version '8.10.2'
}

group = 'org.alexprokopiev'
version = '0.0.1-SNAPSHOT'

ext {
    versions = [
            'testcontainers': '1.20.2',
            'querydsl': '5.0.0',
            'springdoc': '2.6.0'
    ]
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation project(':common-logging-starter')
    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.data:spring-data-envers"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.security:spring-security-oauth2-client"
    implementation "org.springframework.security:spring-security-oauth2-jose"
    implementation "org.thymeleaf.extras:thymeleaf-extras-springsecurity6"
    implementation "org.postgresql:postgresql"
    implementation "org.liquibase:liquibase-core"
    implementation "org.apache.tomcat.embed:tomcat-embed-jasper"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${versions.springdoc}"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation "org.testcontainers:postgresql:${versions.testcontainers}"

    implementation "com.querydsl:querydsl-jpa"
    implementation "com.querydsl:querydsl-core"
    implementation "com.querydsl:querydsl-collections"
    annotationProcessor "com.querydsl:querydsl-apt:${versions.querydsl}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
    useJUnitPlatform()
}

//// Additional Querydsl configuration
def generated = 'build/generated'

// Querydsl - Place QClass files to the specific directory
tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// Querydsl - Add QClass file path to the java source set
sourceSets {
    main.java.srcDirs += [ generated ]
}

// Querydsl - Remove QClass directory when doing `gradle clean`
clean {
    delete file(generated)
}
